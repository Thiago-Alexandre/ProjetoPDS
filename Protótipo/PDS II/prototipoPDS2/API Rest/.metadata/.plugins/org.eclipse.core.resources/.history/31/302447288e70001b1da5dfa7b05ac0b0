package com.pds.dto;

import javax.validation.constraints.Min;
import javax.validation.constraints.NotBlank;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import com.pds.model.Organizacao;

import lombok.AllArgsConstructor;
import lombok.Data;

@AllArgsConstructor 	/** Cria um construtor com todos os atributos */
@Data 					/** Cria getters e setters */

/**
 * DTO de Organização a ser utilizado para alterar dados
 * Usado para realizar a validação dos dados informados
 */
public class OrganizacaoForUpdateDTO {

	@NotNull(message = "ID é obrigatório!")
	@Min(value = 1, message = "Não é permitido números negativos ou 0!")
	private Long id;
	
	@NotBlank(message = "Nome não pode ser vazio!")
	@NotEmpty(message = "Nome não pode ser vazio!")
	@Size(max = 100, message = "Tamanho máximo do nome é de 100 caracteres!")
	private String nome;
	
	@NotNull(message = "Valor de Acesso é obrigatório!")
	private Boolean bloqueado;
	
	/** 
	 * Método para gerar objeto Organização após ser validado o DTO
	 * @return Organizacao
	 */
	public Organizacao generationObject() {
		return new Organizacao(id, nome, bloqueado);
	}
}