package com.pds.model;

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Temporal;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

@NoArgsConstructor		/** Cria um construtor vazio */
@AllArgsConstructor		/** Cria um construtor com todos os atributos */
@Data					/** Cria getters e setters */
@Entity					/** Mapeamento da Entidade */
public class Organizacao {

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private Long id;
	
	@Column(nullable=false, length=100)
	private String nome;
	
	@Column(nullable=false)
	private Double valorPatrimonial;
	
	/** Configura o Date para ser compatível com o banco de dados */
	@Temporal(javax.persistence.TemporalType.TIMESTAMP)
	@Column(nullable=false)
	private Date dataAtualizacaoValor;
	
	@Column(nullable=false)
	private Boolean bloqueado;
	
	/** 
	 * Construtor utilizado para salvar uma nova organização
	 * @param String
	 * @param Double
	 * @param Date
	 * @param Boolean
	 */
	public Organizacao(String nome, Double valor, Date data, Boolean bloqueado) {
		this.nome = nome;
		this.valorPatrimonial = valor;
		this.dataAtualizacaoValor = data;
		this.bloqueado = bloqueado;
	}
	
	/** 
	 * Construtor utilizado para alterar uma organização
	 * @param Long
	 * @param String
	 * @param Boolean
	 */
	public Organizacao(Long id, String nome, Boolean bloqueado) {
		this.id = id;
		this.nome = nome;
		this.bloqueado = bloqueado;
	}
}